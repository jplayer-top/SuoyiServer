apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'
android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.ilanchuang.xiaoi.suoyiserver"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            assets.srcDirs = ['assets']
        }
    }
    signingConfigs {
        config {
            keyAlias "obl"
            keyPassword "lj011200"
            storeFile file("../obl.jks")
            storePassword "lj011200"
        }

        debug {
            keyAlias "obl"
            keyPassword "lj011200"
            storeFile file("../obl.jks")
            storePassword "lj011200"

        }
        release {
            keyAlias "obl"
            keyPassword "lj011200"
            storeFile file("../obl.jks")
            storePassword "lj011200"
        }
    }
    buildTypes {
        def url = rootProject.ext.url
        def key_rong = rootProject.ext.key_rong
        release {
            buildConfigField "String", "HOST", "\"${url["release"]}\""
            minifyEnabled false // 开启混淆
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [RONG_KEY: key_rong["release"], CHANNEL_NAME: "dev"]
            signingConfig signingConfigs.config
        }
        debug {
            buildConfigField "String", "HOST", "\"${url["debug"]}\""
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [RONG_KEY: key_rong["debug"], CHANNEL_NAME: "dev"]
            signingConfig signingConfigs.config
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation rootProject.ext.supportLibs
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:0.5'
    implementation project(':baseprolibrary')
    implementation project(':CallKit')
    implementation project(':CallLib')
    implementation project(':IMKit')
    implementation project(':IMLib')
    implementation files('libs/AMap_2DMap_V2.9.0_20160525.jar')
    implementation files('libs/AMap_Channel_Location_V1.4.0_20160708.jar')
    implementation files('libs/AMap_Search_V3.4.0_20160811.jar')
    implementation files('libs/MiPush_SDK_Client_3_5_1.jar')
    implementation 'com.huawei.android.hms:push:2.5.3.305'
    implementation 'com.jakewharton:butterknife:8.5.1'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.2'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'
}
